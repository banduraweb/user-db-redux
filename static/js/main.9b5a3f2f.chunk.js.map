{"version":3,"sources":["database/database.js","store/actions.js","components/Header/Header.js","components/Input/TextInput.js","constants/form-fields.js","validators/validators.js","components/FormAdd/FormAdd.js","store/selectors.js","components/TableData/TableData.js","sorting/SortingUsers.js","App.js","store/rootReducer.js","store/index.js","index.js"],"names":["db","Dexie","version","stores","userDataBase","open","catch","err","console","log","stack","ACTION_TYPES","loadUsers","dispatch","a","async","type","on","DB_READY","toArray","allUsers","payload","error","message","Header","useDispatch","getQuerySearchParam","param","target","value","Navbar","bg","variant","id","Brand","href","name","Nav","className","Link","verno","Form","inline","onSubmit","e","preventDefault","onChange","debounceTimeout","placeholder","TextInput","errorMessage","props","role","SelectInput","renderInput","input","meta","touched","renderInputNumber","renderInputSelect","USERS_TYPES_DATA","FIRST_NAME","LAST_NAME","PHONE","GENDER","AGE","_id","required","requiredFirstName","test","trim","requiredLastName","requiredAge","requiredPhone","reduxForm","form","handleSubmit","valid","border","Field","component","validate","Group","Label","replace","Button","disabled","rootSelector","state","selectUsers","createSelector","usersData","selectQueryUseratList","isLoading","query","TableData","users","useSelector","useState","sortField","arrowSort","selectedParams","setSelected","getSortParams","visibleUsers","filter","toLowerCase","includes","length","Table","striped","bordered","hover","responsive","Object","keys","map","elem","key","onClick","dataArray","field","isNaN","sort","b","localeCompare","renderData","idx","delete","data","setTimeout","actions","deleteUserFromDB","Spinner","animation","App","useEffect","Container","values","firstName","lastName","Gender","Age","phone","user","uuid","add","then","reset","rootReducer2","combineReducers","action","reduxFormReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"gQAEaA,EAAK,I,OAAIC,GAAM,cAE5BD,EAAGE,QAAQ,GAAGC,OAAO,CACjBC,aAAc,iDAGlBJ,EAAGK,OAAOC,OAAM,SAAAC,GAEZC,QAAQC,IAAIF,EAAIG,OAASH,MCNtB,IAAMI,EACE,YADFA,EAES,mBAFTA,EAGM,gBAHNA,EAIK,eAJLA,EAKO,iBALPA,EAMI,cANJA,EAOI,cA4CJC,EAAY,kBAAM,SAAMC,GAAN,iBAAAC,EAAAC,OAAA,gEAGvBF,EAtC2B,CAC/BG,KAAML,IAkCqB,WAAAG,EAAA,MAIFd,EAAGiB,GAAG,SAAS,kBAAOjB,MAJpB,cAInBkB,EAJmB,kBAAAJ,EAAA,MAMFd,EAAGI,aAAae,WANd,OAMnBC,EANmB,OAQvBZ,QAAQC,IAAIW,EAAUF,GAEtBL,EApCG,CACHG,KAAML,EACNU,QAkCmBD,IAVI,kDAcvBP,GAvDaS,EAuDS,KAAEC,QAvDD,CAC3BP,KAAML,EACNU,QAASC,KAuCkB,yBAgBvBT,EAhD0B,CAC9BG,KAAML,IA+BqB,+CAzCV,IAAAW,IAyCU,4B,6CCjBhBE,EA/BA,WACX,IAAMX,EAAWY,cAKXC,EAAqB,SAAC,GAAY,IAC9BC,EAD6B,EAAVC,OACJC,MACrBhB,EDkCkC,CACtCG,KAAML,EACNU,QCpCsCM,KAGtC,OACI,oCACI,kBAACG,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,GAAG,kBAChC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAASnC,EAAGoC,MAC/B,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUJ,KAAK,KAAf,OAAwBnC,EAAGwC,QAE/B,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,SAhBN,SAACC,GAChBA,EAAEC,mBAgBU,kBAAC,gBAAD,CACIC,SAAU,SAACF,GAAKlB,EAAoBkB,IACpCG,gBAAiB,IACjB/B,KAAK,OACLgC,YAAY,iBACZV,UAAU,gB,iBC7B5BW,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAiBC,EAAnB,uCAClB,6BACI,0BAAWA,GACVD,GAAgB,0BACbZ,UAAU,qBACVc,KAAK,SAASF,KAMhBG,EAAc,SAAC,GAA8B,IAA7BH,EAA4B,EAA5BA,aAAiBC,EAAW,gCAE9C,OAEI,6BACI,2BAAYA,EACR,iCACA,4BAAQtB,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEHqB,GAAgB,0BACbZ,UAAU,qBACVc,KAAK,SAASF,KAOjBI,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KAEhC,OAAS,kBAAC,EAAD,iBAAeD,EAAf,CACWvC,KAAK,OACLoB,KAAMmB,EAAMnB,KACZc,aAAcM,EAAKC,SAAWD,EAAKlC,UAG9CoC,EAAoB,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KAEtC,OAAS,kBAAC,EAAD,iBAAeD,EAAf,CACWvC,KAAK,SACLoB,KAAMmB,EAAMnB,KACZc,aAAcM,EAAKC,SAAWD,EAAKlC,UAI9CqC,EAAoB,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KAEtC,OAAS,kBAAC,EAAD,iBAAiBD,EAAjB,CACaL,aAAcM,EAAKC,SAAWD,EAAKlC,UCpDhDsC,EAAmB,CAC5BC,WAAY,aACZC,UAAW,YACXC,MAAO,mBACPC,OAAQ,SACRC,IAAK,MACLC,IAAK,ICNIC,EAAW,SAACtC,GACrB,IAAKA,GAAmB,KAAVA,EACV,MAAO,0BAMFuC,EAAoB,SAAAvC,GAE7B,IADe,oBACJwC,KAAKxC,EAAMyC,QAClB,MAAO,eAKFC,EAAmB,SAAA1C,GAE5B,IADe,oBACJwC,KAAKxC,EAAMyC,QAClB,MAAO,eAKFE,EAAc,SAAA3C,GACvB,IAAKA,EAAQ,KAAOA,EAAQ,IACxB,MAAO,YAKF4C,EAAgB,SAAA5C,GAGzB,IAFc,eAEHwC,KAAKxC,EAAMyC,QAClB,MAAO,wB,kBCkDAI,cAAU,CACrBC,KAAM,eADKD,EAxEC,SAAAvB,GAAU,IAEdyB,EAAwBzB,EAAxByB,aAAcC,EAAU1B,EAAV0B,MACtB,OAEI,kBAACpC,EAAA,EAAD,CAAOE,SAAUiC,EAActC,UAAU,gCAAgCwC,OAAO,WAE5E,6BACI,6BAAMlB,EAAiBC,YACvB,6BACI,kBAACkB,EAAA,EAAD,CACI3C,KAAK,YACL4C,UAAW1B,EACX2B,SAAU,CAACd,EAAUC,OAIjC,kBAAC3B,EAAA,EAAKyC,MAAN,KACI,kBAACzC,EAAA,EAAK0C,MAAN,KAAavB,EAAiBE,WAC9B,6BACI,kBAACiB,EAAA,EAAD,CACI3C,KAAK,WACL4C,UAAW1B,EACX2B,SAAU,CAACd,EAAUI,OAMjC,kBAAC9B,EAAA,EAAKyC,MAAN,KACI,kBAACzC,EAAA,EAAK0C,MAAN,KAAavB,EAAiBI,QAC9B,6BACI,kBAACe,EAAA,EAAD,CAAO3C,KAAK,SACL6C,SAAUd,EACVa,UAAWrB,MAK1B,kBAAClB,EAAA,EAAKyC,MAAN,KACI,kBAACzC,EAAA,EAAK0C,MAAN,KAAavB,EAAiBK,KAC9B,6BACI,kBAACc,EAAA,EAAD,CAAO3C,KAAK,MACL6C,SAAU,CAACd,EAAUK,GACrBQ,UAAWtB,EACX1C,KAAK,aAMpB,kBAACyB,EAAA,EAAKyC,MAAN,KACI,kBAACzC,EAAA,EAAK0C,MAAN,KACKvB,EAAiBG,MAAMqB,QAAQ,aAAc,KAElD,6BACI,kBAACL,EAAA,EAAD,CAAO3C,KAAK,QACL6C,SAAU,CAACd,EAAUM,GACrBO,UAAW1B,MAM1B,kBAACb,EAAA,EAAKyC,MAAN,KACI,kBAACG,EAAA,EAAD,CAAUrE,KAAK,SAASsE,UAAWT,GAAnC,e,0BC5EVU,EAAe,SAAAC,GAAK,OAAIA,GAEjBC,EAAcC,YACzBH,GACA,YAAoB,IAAjBI,EAAgB,EAAhBA,UACD,OAAKA,GACI,MAeAC,GAPgBF,YACzBH,GACA,qBAAGM,aAK8BH,YACjCH,GACA,qBAAGO,U,iBCqGQC,EAnHC,WAEZ,IAAMC,EAAQC,aAAY,SAAAT,GAAK,OAAIC,EAAYD,MACzCM,EAAQG,aAAY,SAAAT,GAAK,OAAII,EAAsBJ,MACnD3E,EAAWY,cACVkE,EAAaK,EAAbL,UALS,EAOsBO,mBAAS,CAACC,UAAW,KAAMC,UAAW,OAP5D,mBAOTC,EAPS,KAOOC,EAPP,KASVC,EAAe,SAAC,GAAY,IAAX3E,EAAU,EAAVA,OAEbuE,EAAYvE,EAAOQ,KACnBgE,EAAYxE,EAAOC,MACzBrB,QAAQC,IAAI0F,GACZG,EAAY,CACRH,YACAC,eAiBAD,EAAwBE,EAAxBF,UAAWC,EAAaC,EAAbD,UACbI,EAAyB,KAAVV,EACfH,EACAA,EAAUc,QAAO,qBAAG5C,WAAH,EAAeC,WAC7B4C,cACAC,SAASb,EAAMY,kBAExB,OACI,oCACMf,EAIyB,IAArBA,EAAUiB,OACN,wBAAItE,UAAU,iCAAd,sBAEN,kBAACuE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAChF,QAAQ,OAAOiF,WAAW,KAAKhF,GAAG,QACzDK,UAAU,iCACb,+BACA,4BACI,iCACC4E,OAAOC,KAAKvD,GAAkBwD,KAAI,SAAAC,GAC/B,OACI,wBAAIC,IAAKD,EAAM/E,UAAU,gBACpB+E,EAAKjC,QAAQ,KAAM,KADxB,SAEI,uBAAG9C,UAAU,iBACT,kBAAC+C,EAAA,EAAD,CAAQ/C,UAAU,sBACVF,KAAMiF,EACNxF,MAAM,KACN0F,QAAS,SAAC3E,GAAD,OAAK2D,EAAc3D,KAHpC,UAQA,kBAACyC,EAAA,EAAD,CAAQ/C,UAAU,sBACVF,KAAMiF,EACNxF,MAAM,OACN0F,QAAS,SAAC3E,GAAD,OAAK2D,EAAc3D,KAHpC,iBAcpB,+BC5FM,SAAC4E,EAAUC,EAAOrB,GACxC,GAAKoB,EAAU,GAAGC,GACd,QAASC,MAAMF,EAAU,GAAGC,KACxB,KAAK,EACD,MAAqB,OAAdrB,EACH,YAAIoB,GAAWG,MAAK,SAAC7G,EAAG8G,GAAJ,OAAW9G,EAAE2G,IAAWG,EAAEH,MAC3C,YAAID,GAAWG,MAAK,SAAC7G,EAAG8G,GAAJ,OAAWA,EAAEH,IAAW3G,EAAE2G,MAEzD,KAAK,EACD,MAAqB,OAAdrB,EACH,YAAIoB,GAAWG,MAAK,SAAC7G,EAAG8G,GAAJ,OAAW9G,EAAE2G,GAAOI,cAAcD,EAAEH,OACtD,YAAID,GAAWG,MAAK,SAAC7G,EAAG8G,GAAJ,OAAWA,EAAEH,GAAOI,cAAc/G,EAAE2G,OAClE,QACI,OAAOD,EAGnB,OAAOA,ED+EaM,CAAWtB,EAAcL,EAAWC,GAAWgB,KAC3C,WAAmDW,GAAnD,IAAE7D,EAAF,EAAEA,IAAKL,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,MAAOC,EAArC,EAAqCA,OAAQC,EAA7C,EAA6CA,IAA7C,OAEI,wBAAIqD,IAAKpD,GACL,8BAAO6D,GACP,4BAAKlE,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,EACL,uBAAG5B,UAAU,qBACT,kBAAC+C,EAAA,EAAD,CAAQkC,QAAS,YA3E9B,SAAMtF,GAAN,QAAAnB,EAAAC,OAAA,uDACff,EAAGI,aAAa4H,OAAO/F,GADR,WAAAnB,EAAA,MAEMd,EAAGI,aAAae,WAFtB,OAEXC,EAFW,OAGfP,EPQuB,CAC/BG,KAAML,EACNsH,KOVoC7G,IAC5B8G,YAAW,WACPrH,EAASsH,OACX,KANa,qCA2EmCC,CAAiBlE,IACnClC,QAAQ,QADZ,uBArDvB,yBAAKM,UAAU,iCACZ,kBAAC+F,EAAA,EAAD,CAASC,UAAU,OAAOtG,QAAQ,e,iCEKvCuG,MA/Cf,WAEE,IAAM1H,EAAWY,cAiCjB,OA9BE+G,qBAAU,WACNN,YAAW,WACPrH,EAASsH,OACX,OAGL,IA0BC,kBAACM,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAkB9F,SAxBF,SAAC+F,GAAY,IAEtBC,EAA2CD,EAA3CC,UAAWC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,IAAKC,EAASL,EAATK,MAErCC,EAAO,CACP9E,IAAK+E,MACLpF,WAAY8E,EACZ7E,UAAW8E,EACX7E,MAAOgF,EACP/E,OAAQ6E,EACR5E,IAAK6E,GAGT9I,EAAGI,aAAa8I,IAAIF,GAAMG,MAAK,oBAAArI,EAAAC,OAAA,gDAC3BF,ETLD,CACHG,KAAML,EACNU,QSG6B2H,IADE,wCAI/BnI,EAASuI,YAAM,mBAQf,kBAAC,EAAD,Q,gDCkBKC,GAAeC,2BAAgB,CACxC3D,UAhEiB,WAAyB,IAAxBH,EAAuB,uDAAf,GAAI+D,EAAW,uCACzC,OAAQA,EAAOvI,MACX,KAAKL,EAAyB,IACnBU,EAAWkI,EAAXlI,QACP,OAAO,gBACAmE,EADP,CAEIG,UAAWtE,IAGnB,KAAKV,EAAgC,IAC1BU,EAAWkI,EAAXlI,QACP,OAAO,gBACAmE,EADP,CAEIG,UAAU,GAAD,mBAAMH,EAAMG,WAAZ,CAAuBtE,MAIxC,KAAKV,EAA2B,IACrBU,EAAWkI,EAAXlI,QACP,OAAO,gBACAmE,EADP,CAEIG,UAAWtE,IAInB,QACI,OAAOmE,IAuCfK,UAhCmB,WAA4B,IAA3BL,EAA0B,wDAAX+D,EAAW,uCAC9C,OAAQA,EAAOvI,MACX,KAAKL,EACD,OAAO,EAEX,KAAKA,EACD,OAAO,EAEX,QACI,OAAO6E,IAwBfM,MAjBiB,WAAyB,IAAxBN,EAAuB,uDAAf,GAAI+D,EAAW,uCACzC,OAAQA,EAAOvI,MACX,KAAKL,EAA2B,IACrBU,EAAWkI,EAAXlI,QAEP,OADAb,QAAQC,IAAIY,GACLA,EAGX,QACI,OAAOmE,IASfb,KAAM6E,OCtEGC,GAAQC,uBACjBL,GACAM,+BACAC,2BAAgBC,QCDpBC,IAASC,OAEL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,EAAD,OAGJO,SAASC,eAAe,W","file":"static/js/main.9b5a3f2f.chunk.js","sourcesContent":["import Dexie from \"dexie\";\n\nexport const db = new Dexie(\"ReactDexie\");\n\ndb.version(1).stores({\n    userDataBase: \"_id, firstName, lastName, phone, gender, age\"\n});\n\ndb.open().catch(err => {\n\n    console.log(err.stack || err);\n});","import {db} from \"../database/database\";\n\n\n\nexport const ACTION_TYPES = {\n    GET_USERS: 'GET_USERS',\n    DATA_ADD_SUCCESS: \"DATA_ADD_SUCCESS\",\n    START_LOADING: \"START_LOADING\",\n    STOP_LOADING: \"STOP_LOADING\",\n    SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n    DELETE_USER: 'DELETE_USER',\n    SEARCH_USER: \"SEARCH_USER\"\n};\n\nconst setErrorLoad = error => ({\n    type: ACTION_TYPES.SET_LOAD_ERROR,\n    payload: error,\n});\n\n\nexport const startLoading = () => ({\n    type: ACTION_TYPES.START_LOADING,\n});\nexport const stopLoading = () => ({\n    type: ACTION_TYPES.STOP_LOADING,\n});\n\n\nexport const saveUsers = (data) => {\n    return {\n        type: ACTION_TYPES.GET_USERS,\n        payload: data,\n    };\n};\n\n\nexport const addUser = (data) => {\n    return {\n        type: ACTION_TYPES.DATA_ADD_SUCCESS,\n        payload: data,\n    };\n};\n\nexport const deleteUser = data => ({\n    type: ACTION_TYPES.DELETE_USER,\n    data,\n});\n\n\nexport const searchQueryUsers = value => ({\n    type: ACTION_TYPES.SEARCH_USER,\n    payload: value,\n});\n\n\nexport const loadUsers = () => async(dispatch) => {\n\n    try {\n        dispatch(startLoading());\n        let DB_READY = await db.on(\"ready\", () => (db));\n\n        let allUsers = await db.userDataBase.toArray();\n\n        console.log(allUsers, DB_READY);\n\n        dispatch(saveUsers(allUsers));\n    }\n\n    catch (e) {\n        dispatch(setErrorLoad(e.message));\n    } finally {\n        dispatch(stopLoading());\n    }\n};","import React from \"react\";\nimport { Form, Navbar, Nav } from \"react-bootstrap\";\nimport { DebounceInput } from 'react-debounce-input';\nimport {db} from \"../../database/database\";\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const preventEvent=(e)=>{\n        e.preventDefault()\n    };\n\n    const getQuerySearchParam =({target})=>{\n        const param = target.value;\n        dispatch(actions.searchQueryUsers(param))\n    };\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\" id=\"header__navbar\">\n                <Navbar.Brand href=\"#home\">{db.name}</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#\">V : {db.verno}</Nav.Link>\n                </Nav>\n                <Form inline onSubmit={preventEvent}>\n                    <DebounceInput\n                        onChange={(e)=>{getQuerySearchParam(e)}}\n                        debounceTimeout={700}\n                        type=\"text\"\n                        placeholder=\"Search by name\"\n                        className=\"mr-sm-2\" />\n                </Form>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst TextInput = ({errorMessage, ...props}) => (\n<div>\n    <input {...props}/>\n    {errorMessage && <span\n        className=\"alert alert-danger\"\n        role=\"alert\">{errorMessage}</span>}\n</div>\n\n);\n\n\nconst SelectInput = ({errorMessage, ...props}) => {\n\n    return (\n\n        <div>\n            <select {...props}>\n                <option></option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n            </select>\n            {errorMessage && <span\n                className=\"alert alert-danger\"\n                role=\"alert\">{errorMessage}</span>}\n        </div>\n\n    );\n};\n\n\nexport const renderInput = ({input, meta})=> {\n\n    return  (<TextInput {...input}\n                        type=\"text\"\n                        name={input.name}\n                        errorMessage={meta.touched && meta.error} />);\n};\n\nexport const renderInputNumber = ({input, meta})=> {\n\n    return  (<TextInput {...input}\n                        type=\"number\"\n                        name={input.name}\n                        errorMessage={meta.touched && meta.error} />);\n};\n\n\nexport const renderInputSelect = ({input, meta})=> {\n\n    return  (<SelectInput {...input}\n                          errorMessage={meta.touched && meta.error}/>);\n};\n\n","export const USERS_TYPES_DATA = {\n    FIRST_NAME: 'First Name',\n    LAST_NAME: 'Last Name',\n    PHONE: 'Phone 0675011766',\n    GENDER: 'Gender',\n    AGE: 'Age',\n    _id: ''\n};","export const required = (value)  => {\n    if (!value || value === '') {\n        return 'This field is required';\n    }\n    return undefined\n};\n\n\nexport const requiredFirstName = value => {\n    const regex =  /^[a-zA-Z]{1,20}$/g;\n    if (!regex.test(value.trim())) {\n        return 'Not correct';\n    }\n};\n\n\nexport const requiredLastName = value => {\n    const regex =  /^[a-zA-Z]{1,20}$/g;\n    if (!regex.test(value.trim())) {\n        return 'Not correct';\n    }\n};\n\n\nexport const requiredAge = value => {\n    if (+value < 16 || +value > 121) {\n        return '16...120';\n    }\n};\n\n\nexport const requiredPhone = value => {\n    const regex = /^\\+380\\d{9}$/;\n\n    if (!regex.test(value.trim())) {\n        return 'format +380675011766';\n    }\n};","import React from \"react\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {renderInput, renderInputNumber, renderInputSelect} from '../Input/TextInput'\nimport {USERS_TYPES_DATA} from \"../../constants/form-fields\";\nimport {required,\n    requiredFirstName,\n    requiredLastName,\n    requiredAge,\n    requiredPhone} from '../../validators/validators'\n\nimport { Field, reduxForm } from 'redux-form';\n\n\nconst FormAdd = props => {\n\n    const { handleSubmit, valid } = props;\n    return (\n\n        <Form  onSubmit={handleSubmit} className=\"w-50 p-12 mx-auto form_custom\" border=\"primary\">\n\n            <div>\n                <div>{USERS_TYPES_DATA.FIRST_NAME}</div>\n                <div>\n                    <Field\n                        name=\"firstName\"\n                        component={renderInput}\n                        validate={[required, requiredFirstName]}\n                    />\n                </div>\n            </div>\n            <Form.Group>\n                <Form.Label>{USERS_TYPES_DATA.LAST_NAME}</Form.Label>\n                <div>\n                    <Field\n                        name=\"lastName\"\n                        component={renderInput}\n                        validate={[required, requiredLastName]}\n\n\n                    />\n                </div>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>{USERS_TYPES_DATA.GENDER}</Form.Label>\n                <div>\n                    <Field name=\"Gender\"\n                           validate={required}\n                           component={renderInputSelect}>\n                    </Field>\n                </div>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>{USERS_TYPES_DATA.AGE}</Form.Label>\n                <div>\n                    <Field name=\"Age\"\n                           validate={[required, requiredAge]}\n                           component={renderInputNumber}\n                           type=\"number\"\n\n                    >\n                    </Field>\n                </div>\n            </Form.Group>\n            <Form.Group >\n                <Form.Label>\n                    {USERS_TYPES_DATA.PHONE.replace(/[^a-zA-Z]/g, \"\")}\n                </Form.Label>\n                <div>\n                    <Field name=\"phone\"\n                           validate={[required, requiredPhone]}\n                           component={renderInput}\n                    >\n                    </Field>\n                </div>\n            </Form.Group>\n\n            <Form.Group>\n                <Button   type=\"submit\" disabled={!valid}>Submit</Button>\n            </Form.Group>\n        </Form>\n\n    );\n};\n\nexport default reduxForm({\n    form: 'addUserForm',\n})(FormAdd);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const FormAdd =()=> {\n//     const dispatch = useDispatch();\n//     const handleSubmit = (e)=> {\n//         // e.preventDefault();\n//         // dispatch(actions.onSubmitForm(e.target));\n//         // console.log(e.target.value);\n//     };\n//\n//     return (\n//         <Form onSubmit={handleSubmit}  className=\"w-75 p-3 mx-auto form_custom\" border=\"primary\">\n//             <Form.Row>\n//                 <Form.Group as={Col}>\n//                     <Form.Label>{USERS_TYPES_DATA.FIRST_NAME}</Form.Label>\n//                     <Form.Control\n//                         type=\"text\"\n//                         placeholder={`${USERS_TYPES_DATA.FIRST_NAME.toLowerCase()}`}\n//                     />\n//                     <Form.Text className=\"text-muted\"/>\n//                 </Form.Group>\n//\n//                 <Form.Group as={Col}>\n//                     <Form.Label>{USERS_TYPES_DATA.LAST_NAME}</Form.Label>\n//                     <Form.Control\n//                         name={\"LAST_NAME\"}\n//                         type=\"text\"\n//                         placeholder={`${USERS_TYPES_DATA.LAST_NAME.toLowerCase()}`}\n//                     />\n//                     <Form.Text className=\"text-muted\"/>\n//                 </Form.Group>\n//             </Form.Row>\n//             <Form.Row>\n//\n//\n//                 <Form.Group as={Col}>\n//                     <Form.Label>{USERS_TYPES_DATA.GENDER}</Form.Label>\n//                     <Form.Control\n//\n//                         as=\"select\"\n//                         name={\"GENDER\"}\n//                     >\n//                         <option value={0}>Choose</option>\n//                         <option value=\"male\">male</option>\n//                         <option value=\"female\">female</option>\n//                     </Form.Control>\n//                 </Form.Group>\n//\n//                 <Form.Group as={Col}>\n//                     <Form.Label>{USERS_TYPES_DATA.AGE}</Form.Label>\n//                     <Form.Control\n//                         type=\"number\"\n//                         name={\"AGE\"}\n//                         placeholder={`${USERS_TYPES_DATA.AGE.toLowerCase()}`}\n//                         min={1}\n//                         max={100}\n//                     />\n//                     <Form.Text className=\"text-muted\"/>\n//                 </Form.Group>\n//             </Form.Row>\n//\n//\n//             <Col sm={4} className=\"m-sm-auto\">\n//                 <Form.Group>\n//                     <Form.Label>\n//                         {USERS_TYPES_DATA.PHONE.replace(/[^a-zA-Z]/g, \"\")}\n//                     </Form.Label>\n//                     <Form.Control\n//\n//                         type=\"text\"\n//                         placeholder={`${USERS_TYPES_DATA.PHONE.toLowerCase().replace(\n//                             /phone/,\n//                             \"\"\n//                         )}`}\n//                     />\n//                     <Form.Text className=\"text-muted\"/>\n//                 </Form.Group>\n//             </Col>\n//             <>\n//                 <Button\n//                     variant=\"primary\"\n//                     type=\"submit\"\n//                 >\n//                     Submit\n//                 </Button>\n//\n//\n//             </>\n//         </Form>\n//     );\n// };\n\n//export default FormAdd;","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectUsers = createSelector(\n  rootSelector,\n  ({ usersData }) => {\n    if (!usersData) {\n      return [];\n    }\n\n    return usersData\n  }\n);\n\n\nexport const statusLoading = createSelector(\n    rootSelector,\n    ({ isLoading }) => isLoading\n\n);\n\n\nexport const selectQueryUseratList = createSelector(\n    rootSelector,\n    ({ query }) => query\n);","import React, {useState} from 'react';\nimport {USERS_TYPES_DATA} from \"../../constants/form-fields\";\nimport {Table, Button} from \"react-bootstrap\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {selectQueryUseratList, selectUsers} from \"../../store/selectors\";\nimport { Spinner } from \"react-bootstrap\";\nimport {renderData} from \"../../sorting/SortingUsers\";\nimport {db} from \"../../database/database\";\nimport * as actions from \"../../store/actions\";\n\n\nconst TableData=()=>{\n\n    const users = useSelector(state => selectUsers(state));\n    const query = useSelector(state => selectQueryUseratList(state));\n    const dispatch = useDispatch();\n    const {usersData} = users;\n\n    const [selectedParams, setSelected] = useState({sortField: null, arrowSort: null});\n\n    const getSortParams =({target})=>{\n\n        const sortField = target.name;\n        const arrowSort = target.value;\n        console.log(sortField);\n        setSelected({\n            sortField,\n            arrowSort,\n        });\n\n    };\n\n    const deleteUserFromDB=async(id)=>{\n            db.userDataBase.delete(id);\n            let allUsers = await db.userDataBase.toArray();\n            dispatch(actions.deleteUser(allUsers));\n            setTimeout(()=>{\n                dispatch(actions.loadUsers());\n            },1000);\n\n\n    };\n\n\n     const {sortField, arrowSort} = selectedParams;\n    const visibleUsers = query === ''\n        ? usersData\n        : usersData.filter(({ FIRST_NAME, LAST_NAME }) => (FIRST_NAME + LAST_NAME)\n            .toLowerCase()\n            .includes(query.toLowerCase()));\n\n    return(\n        <>\n            {!usersData ?\n                (<div className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"grow\" variant=\"primary\"/>\n                </div>)\n                : usersData.length === 0\n                    ? <h1 className=\"d-flex justify-content-center\">Data Base is Empty</h1>\n                    :\n                <Table striped bordered hover variant=\"dark\" responsive=\"sl\" id=\"table\"\n                       className=\"table-custom table-responsive\">\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        {Object.keys(USERS_TYPES_DATA).map(elem => {\n                            return (\n                                <th key={elem} className=\"table-header\">\n                                    {elem.replace(/_/g, ' ')}&#8195;\n                                    <p className=\"btn-container\">\n                                        <Button className=\"btn_search btn_sort\"\n                                                name={elem}\n                                                value=\"up\"\n                                                onClick={(e)=>getSortParams(e)}\n                                        >&#8593;\n\n                                        </Button>\n\n                                        <Button className=\"btn_search btn_sort\"\n                                                name={elem}\n                                                value=\"down\"\n                                                onClick={(e)=>getSortParams(e)}\n                                        >&#8595;\n                                        </Button>\n                                    </p>\n                                </th>\n                            )\n\n                        })}\n\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n\n                        renderData(visibleUsers, sortField, arrowSort).map(\n                            ({_id, FIRST_NAME, LAST_NAME, PHONE, GENDER, AGE}, idx) => (\n\n                                <tr key={_id}>\n                                    <td>{++idx}</td>\n                                    <td>{FIRST_NAME}</td>\n                                    <td>{LAST_NAME}</td>\n                                    <td>{PHONE}</td>\n                                    <td>{GENDER}</td>\n                                    <td>{AGE}</td>\n                                    <td>{_id}\n                                    <p className=\"delete-user-block\">\n                                        <Button onClick={()=>{deleteUserFromDB(_id)}}\n                                            variant=\"info\">delete user\n                                        </Button>\n                                    </p>\n                                    </td>\n\n                                </tr>\n\n\n                            )\n                        )}\n                    </tbody>\n                </Table>\n\n            }\n        </>\n    )\n};\n\nexport default TableData","export const renderData = (dataArray,field, arrowSort)=> {\n    if ((dataArray[0][field])) {\n        switch (!isNaN(dataArray[0][field])) {\n            case true:\n                return arrowSort === \"up\" ?\n                    [...dataArray].sort((a, b) => +a[field] - (+b[field]))\n                    :  [...dataArray].sort((a, b) => +b[field] - (+a[field]));\n\n            case false:\n                return arrowSort === \"up\" ?\n                    [...dataArray].sort((a, b) =>  a[field].localeCompare(b[field]))\n                    : [...dataArray].sort((a, b) =>  b[field].localeCompare(a[field]));\n            default:\n                return dataArray\n        }\n    }\n    return dataArray\n};","import React, {useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {Container} from \"react-bootstrap\";\nimport * as actions from './store/actions';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from './components/Header/Header'\nimport FormRegistration from './components/FormAdd/FormAdd';\nimport TableData from './components/TableData/TableData';\nimport {reset} from 'redux-form';\nimport uuid from 'react-uuid'\nimport {db} from \"./database/database\";\nimport \"./App.css\";\n\nfunction App () {\n\n  const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setTimeout(()=>{\n            dispatch(actions.loadUsers());\n        },2000)\n\n\n  }, []);\n\n\n\n    const  AddUserToDB =(values) => {\n\n        const {firstName, lastName, Gender, Age, phone} = values;\n\n        let user = {\n            _id: uuid(),\n            FIRST_NAME: firstName,\n            LAST_NAME: lastName,\n            PHONE: phone,\n            GENDER: Gender,\n            AGE: Age\n        };\n\n        db.userDataBase.add(user).then(async () => {\n            dispatch(actions.addUser(user));\n        });\n\n        dispatch(reset('addUserForm'));\n      };\n\n  return (\n\n      <Container>\n        <Header />\n        <FormRegistration onSubmit={AddUserToDB}/>\n        <TableData/>\n      </Container>\n\n\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ACTION_TYPES } from './actions';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nexport const initialState = {\n    usersData: [],\n};\n\n const rootReducer = (state = [], action) => {\n    switch (action.type) {\n        case ACTION_TYPES.GET_USERS: {\n            const {payload} = action;\n            return {\n                ...state,\n                usersData: payload\n            };\n        }\n        case ACTION_TYPES.DATA_ADD_SUCCESS: {\n            const {payload} = action;\n            return {\n                ...state,\n                usersData: [...state.usersData, payload ]\n            };\n        }\n\n        case ACTION_TYPES.DELETE_USER: {\n            const {payload} = action;\n            return {\n                ...state,\n                usersData: payload\n            };\n        }\n        \n        default:\n            return state;\n    }\n};\n\n\n\n\nconst loadingReducer = (state = false, action) => {\n    switch (action.type) {\n        case ACTION_TYPES.START_LOADING: {\n            return true\n        }\n        case ACTION_TYPES.STOP_LOADING: {\n            return false\n        }\n        default:\n            return state;\n    }\n};\n\n\n\n\nconst queryReducer = (state = '', action) => {\n    switch (action.type) {\n        case ACTION_TYPES.SEARCH_USER: {\n            const {payload} = action;\n            console.log(payload);\n            return payload\n\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const rootReducer2 = combineReducers({\n    usersData: rootReducer,\n    isLoading: loadingReducer,\n    query: queryReducer,\n    form: reduxFormReducer\n});\n\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer2 } from './rootReducer';\n\nexport const store = createStore(\n    rootReducer2,\n    composeWithDevTools(\n    applyMiddleware(thunk),\n));\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport {store} from \"./store\";\n\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}